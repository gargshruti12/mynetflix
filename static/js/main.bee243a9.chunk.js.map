{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gTAIeA,E,OAHCC,EAAMC,OAAO,CACzBC,QAAS,iC,wCCgEEC,MA3Df,YAA2C,IAA7BC,EAA4B,EAA5BA,MAAMC,EAAsB,EAAtBA,SAASC,EAAa,EAAbA,WACzB,EAA2BC,mBAAS,IAApC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAmCF,mBAAS,IAA5C,mBAAOG,EAAP,KAAkBC,EAAlB,KAoCA,OAjCAC,qBAAU,WAAM,4CAEZ,4BAAAC,EAAA,sEACyBb,EAAMc,IAAIT,GADnC,cACUU,EADV,OAEIN,EAAUM,EAAQC,KAAKC,SAF3B,kBAGWF,GAHX,4CAFY,0DAOZG,KACF,CAACb,IA0BC,sBAAKc,UAAU,MAAf,UACI,6BAAKf,IACL,qBAAKe,UAAU,eAAf,SACKX,EAAOY,KAAI,SAAAC,GAAK,OACb,qBAEAC,QAAS,kBArBJ,SAACD,GACfX,EACCC,EAAc,IAEdY,KAAkB,OAALF,QAAK,IAALA,OAAA,EAAAA,EAAOG,OAAQ,IAC3BC,MAAK,SAAAC,GACF,IAAMC,EAAU,IAAIC,gBAAgB,IAAIC,IAAIH,GAAKI,QACjDnB,EAAcgB,EAAUb,IAAI,SAC7BiB,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,MAaRG,CAAYd,IAC1BF,UAAS,sBAAiBb,GAAc,oBACvC8B,IAAG,UAhDT,wCAgDS,OACC9B,EAAae,EAAMgB,YAAchB,EAAMiB,eAEvCC,IAAKlB,EAAMG,MANXH,EAAMmB,SAUlB9B,GAAc,cAAC,IAAD,CAAS+B,QAAS/B,EAAYgC,KAtC1C,CACPC,OAAO,MACPC,MAAM,OACNC,WAAW,CAEPC,SAAS,UC5BfC,EAAU,mCAYDC,EAVC,CACZC,cAAc,8BAAD,OAAgCF,EAAhC,mBACbG,sBAAsB,wBAAD,OAAyBH,EAAzB,sBACrBI,cAAc,4BAAD,OAA6BJ,EAA7B,mBACbK,kBAAkB,2BAAD,OAA4BL,EAA5B,mBACjBM,kBAAkB,2BAAD,OAA4BN,EAA5B,mBACjBO,kBAAkB,2BAAD,OAA4BP,EAA5B,mBACjBQ,mBAAmB,2BAAD,OAA4BR,EAA5B,sBAClBS,mBAAmB,2BAAD,OAA4BT,EAA5B,oB,MCoCPU,MA1Cf,WACI,IAckBC,EAAIC,EAdtB,EAAyBpD,mBAAS,IAAlC,mBAAOc,EAAP,KAAauC,EAAb,KAiBA,OAhBAhD,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,sEACwBb,EAAMc,IAAIkC,EAASE,uBAD3C,cACUnC,EADV,OAEI6C,EACI7C,EAAQC,KAAKC,QACT4C,KAAKC,MAAMD,KAAKE,SAAWhD,EAAQC,KAAKC,QAAQ+C,OAAO,KAJnE,kBAOWjD,GAPX,4CADY,uBAAC,WAAD,wBAUZG,KACF,IACFe,QAAQC,IAAIb,GAKR,yBAAQF,UAAU,SAAS8C,MAAO,CAC9BC,eAAgB,QAChBC,gBAAgB,6DAAD,cAC2B9C,QAD3B,IAC2BA,OAD3B,EAC2BA,EAAOiB,cADlC,oBAGf8B,mBAAoB,iBALxB,UAOI,sBAAKjD,UAAU,mBAAf,UACI,oBAAIA,UAAU,gBAAd,UACU,OAALE,QAAK,IAALA,OAAA,EAAAA,EAAOjB,SAAP,OAAgBiB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAOG,QAAvB,OAA+BH,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAOgD,iBAE3C,sBAAKlD,UAAU,kBAAf,UACI,wBAAQA,UAAU,iBAAlB,kBACA,wBAAQA,UAAU,iBAAlB,wBAGJ,oBAAIA,UAAU,sBAAd,UApBMuC,EAoBuC,OAACrC,QAAD,IAACA,OAAD,EAACA,EAAOiD,SApB3CX,EAoBoD,KAnB5D,OAAHD,QAAG,IAAHA,OAAA,EAAAA,EAAKM,QAASL,EAAID,EAAIa,OAAO,EAAEZ,EAAE,GAAI,MAAQD,QAqBhD,qBAAKvC,UAAU,2B,MCTZqD,MA7Bf,WACI,MAAyBjE,oBAAS,GAAlC,mBAAOkE,EAAP,KAAYC,EAAZ,KAYA,OAXA9D,qBAAU,WAMN,OALA+D,OAAOC,iBAAiB,UAAU,WAC3BD,OAAOE,QAAQ,IACdH,GAAW,GACTA,GAAW,MAEd,WACHC,OAAOG,oBAAoB,aAEjC,IAGE,sBAAK3D,UAAS,cAASsD,GAAQ,cAA/B,UACA,qBACItD,UAAU,YACViB,IAAI,4EACJG,IAAI,iBAER,qBACIpB,UAAU,cACViB,IAAI,yEACJG,IAAI,qBCCDwC,MApBf,WACE,OACE,sBAAK5D,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACD,cAAC,EAAD,CAAKf,MAAM,oBACXC,SAAU2C,EAASE,sBACnB5C,YAAY,IAEZ,cAAC,EAAD,CAAKF,MAAM,eAAeC,SAAU2C,EAASC,gBAC7C,cAAC,EAAD,CAAK7C,MAAM,YAAYC,SAAU2C,EAASG,gBAC1C,cAAC,EAAD,CAAK/C,MAAM,gBAAgBC,SAAU2C,EAASI,oBAC9C,cAAC,EAAD,CAAKhD,MAAM,gBAAgBC,SAAU2C,EAASK,oBAC9C,cAAC,EAAD,CAAKjD,MAAM,gBAAgBC,SAAU2C,EAASM,oBAC9C,cAAC,EAAD,CAAKlD,MAAM,iBAAiBC,SAAU2C,EAASO,qBAC/C,cAAC,EAAD,CAAKnD,MAAM,gBAAgBC,SAAU2C,EAASQ,yBCVpCwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzD,MAAK,YAAkD,IAA/C0D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bee243a9.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst instance= axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\nexport default instance;","import React,{useState, useEffect} from 'react';\r\nimport axios from './axios';\r\nimport \"./Row.css\";\r\nimport Youtube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst base_url=\"https://image.tmdb.org/t/p/original/\";\r\nfunction Row({title,fetchUrl,isLargeRow}) {\r\n    const [movies,setMovies] = useState([]);\r\n    const [trailerUrl,setTrailerUrl] = useState(\"\");\r\n\r\n    //A snippet of code which runs based on a specific condition/variable\r\n    useEffect(() => {\r\n        //run a piece of code when row component loads\r\n        async function fetchData(){\r\n            const request =await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    },[fetchUrl]);\r\n    //we have put fetchURl in [] bcoz we need to tell the useEffect that we have used it from outside the block\r\n    //if [],run once when the row loads and dont run again\r\n    const opts={\r\n        height:\"390\",\r\n        width:\"100%\",\r\n        playerVars:{\r\n            // https://developer.google.com/youtube/player_parameters\r\n            autoplay:1,\r\n        },\r\n    };\r\n    const handleClick =  (movie) => {\r\n        if(trailerUrl){\r\n            setTrailerUrl('');\r\n        }else{\r\n            movieTrailer(movie?.name || \"\")\r\n            .then(url => {\r\n                const urlParams=new URLSearchParams(new URL(url).search);\r\n                setTrailerUrl(urlParams.get('v'));\r\n            }).catch(error => console.log(error));\r\n        }\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n            <div className=\"row__posters\">\r\n                {movies.map(movie =>(\r\n                    <img\r\n                    key={movie.id}\r\n                    onClick={()=> handleClick(movie)}\r\n                    className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n                     src={`${base_url}${\r\n                         isLargeRow ? movie.poster_path : movie.backdrop_path\r\n                        }`} \r\n                         alt={movie.name}\r\n                     />\r\n                ))}\r\n            </div>\r\n            {trailerUrl && <Youtube videoId={trailerUrl} opts={opts}/>\r\n}</div>\r\n    );\r\n}\r\n\r\nexport default Row\r\n","const API_KEY = \"85f4e9c7328832b083e892e534b4c0c3\";\r\n\r\nconst requests= {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals:`/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated:`/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies:`/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies:`/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies:`/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies:`/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries:`/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n}\r\nexport default requests;","import React,{useState,useEffect} from 'react';\r\nimport axios from \"./axios\";\r\nimport requests from \"./requests\";\r\nimport './Banner.css';\r\nfunction Banner() {\r\n    const [movie,setMovie] = useState([]);\r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            const request=await axios.get(requests.fetchNetflixOriginals);\r\n            setMovie(\r\n                request.data.results[\r\n                    Math.floor(Math.random() * request.data.results.length-1)\r\n                ]\r\n            );\r\n            return request;\r\n        }\r\n        fetchData();\r\n    },[]);\r\n    console.log(movie);\r\n    function truncate(str,n){\r\n        return str?.length > n ? str.substr(0,n-1)+ \"...\" : str;\r\n    }\r\n    return (\r\n        <header className=\"banner\" style={{\r\n            backgroundSize: \"cover\",\r\n            backgroundImage: `url(\r\n               \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\r\n            )`,\r\n            backgroundPosition: \"center center\",\r\n        }}>\r\n            <div className=\"banner__contents\">\r\n                <h1 className=\"banner__title\">\r\n                    {movie?.title || movie?.name || movie?.original_name}\r\n                </h1>\r\n                <div className=\"banner__buttons\">\r\n                    <button className=\"banner__button\">Play</button>\r\n                    <button className=\"banner__button\">My List</button>\r\n                </div>\r\n\r\n                <h1 className=\"banner__description\">{truncate(movie?.overview,150)}</h1>\r\n            </div>\r\n            <div className=\"banner__fadeBottom\"/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React,{useState,useEffect} from 'react';\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav() {\r\n    const [show,handleShow]= useState(false);\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () => {\r\n            if(window.scrollY>100){\r\n                handleShow(true);\r\n            }else handleShow(false);\r\n        });\r\n        return () => {\r\n            window.removeEventListener(\"scroll\");\r\n        };\r\n    },[]);\r\n\r\n    return (\r\n        <div className={`nav ${show && \"nav__black\"}`}>\r\n        <img\r\n            className=\"nav__logo\"\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\r\n            alt=\"Netflix Logo\"\r\n            />\r\n        <img\r\n            className=\"nav__avatar\"\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\r\n            alt=\"Netflix Logo\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\nimport './App.css';\nimport Row from './Row';\nimport requests from './requests';\nimport Banner from \"./Banner\";\nimport Nav from './Nav';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav/>\n      <Banner/>\n     <Row title=\"NETFLIX ORIGINALS\" \n     fetchUrl={requests.fetchNetflixOriginals}\n     isLargeRow={true}\n     />\n     <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending}/>\n     <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}/>\n     <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}/>\n     <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}/>\n     <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/>\n     <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies}/>\n     <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}